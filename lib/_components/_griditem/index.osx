import React, {Component, Fragment} from 'react';
import {DefaultProps, PropTypes, _delivery} from '../../_scripts/_proptypes';
import Div from '../_div/index.osx';
import {isExist, isNotExist} from "../../_scripts/_is";
import PropType from 'prop-types';

const GridItemProps = {
    order: {
        type: PropType.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
    },
    align: {
        type: PropType.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch'])
    },
    fluid: {
        default: true,
        type: PropType.bool
    },
    children: {}
};

export default class GridItem extends Component {
    constructor(props) {
        super(props);
    }

    static defaultProps = DefaultProps(GridItemProps);
    static propTypes = PropTypes(GridItemProps);

    render() {
        const _props = this.props;
        const {order, flex, align, fluid, children} = _props;
        let _sysClass = ['m-grid__item'];
        let _sysStyle = {};
        isExist(fluid) && _sysClass.push('m-grid__item--fluid');
        isExist(order) && _sysClass.push('m-grid__item--order-' + order);
        isExist(align) && _sysClass.push('m-grid__item--' + align);
        isNotExist(fluid) && isExist(flex) && (_sysStyle = Object.assign(_sysClass, {flex}));
        return (
            <Fragment>
                <Div ref='gridItem' {..._delivery(_props, _sysClass, _sysStyle)}>
                    {children}
                </Div>
            </Fragment>
        );
    }
}